<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <RootNamespace>ScrubJay</RootNamespace>
        <AssemblyName>ScrubJay</AssemblyName>

        <TargetFrameworks>
            <!-- Always supports all latest versions -->
            <!-- https://learn.microsoft.com/en-us/dotnet/standard/frameworks#latest-version -->
            net9.0;net8.0;net7.0;net6.0;net5.0;netstandard2.1;net481;
            <!-- Support for .NET Standard 2.0 so source generators can consume this package -->
            netstandard2.0;
        </TargetFrameworks>
        <CheckEolTargetFramework>false</CheckEolTargetFramework>

        <!-- Always use the latest features -->
        <LangVersion>latest</LangVersion>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

        <!-- Static Code Analysis -->
        <!-- https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/compiler-options/errors-warnings -->
        <WarningLevel>4</WarningLevel>
        <AnalysisLevel>latest</AnalysisLevel>
        <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
        <WarningsAsErrors>nullable</WarningsAsErrors>

        <!-- https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/configuration-options -->
        <EnableNETAnalyzers>true</EnableNETAnalyzers>
        <!-- https://learn.microsoft.com/en-us/dotnet/core/project-sdk/msbuild-props#code-analysis-properties -->
        <AnalysisMode>All</AnalysisMode>
        <CodeAnalysisTreatWarningsAsErrors>false</CodeAnalysisTreatWarningsAsErrors>
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>

        <!-- Ensure that all Polyfilled types are public -->
        <PolyPublic>true</PolyPublic>
        <PolyStringInterpolation>true</PolyStringInterpolation>

        <!-- Generate XML documentation -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
    </PropertyGroup>


    <!-- NuGet -->
    <PropertyGroup>
        <IsPackable>true</IsPackable>
        <PackageId>ScrubJay.Core</PackageId>
        <Title>ScrubJay - Core</Title>
        <Version>0.51.0-alpha</Version>
        <Authors>Dissolution</Authors>

        <Description>
            The core ScrubJay library: common code used in all ScrubJay projects
        </Description>

        <RepositoryUrl>https://github.com/Dissolution/ScrubJay.Core</RepositoryUrl>
        <RepositoryType>git</RepositoryType>

        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageIcon>jay.png</PackageIcon>
        <PackageOutputPath>..\packages\</PackageOutputPath>
    </PropertyGroup>

    <!-- Special Release configurations -->
    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <!-- Create NuGet Package -->
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <!-- Validate -->
        <EnablePackageValidation>false</EnablePackageValidation>
    </PropertyGroup>

    <!-- Additional release includes -->
    <ItemGroup Condition="'$(Configuration)' == 'Release'">
        <None Include="..\README.md" Pack="true" PackagePath="\"/>
        <None Include="..\LICENSE.txt" Pack="true" PackagePath="\"/>
        <None Include="..\jay.png" Pack="true" PackagePath="\"/>
    </ItemGroup>

    <!-- Expose our internals to Benchmarks, Test, and downstream ScrubJay libraries -->
    <ItemGroup>
        <InternalsVisibleTo Include="ScrubJay.Benchmarks"/>
        <InternalsVisibleTo Include="ScrubJay.Tests"/>
        <InternalsVisibleTo Include="ScrubJay.Reflection"/>
    </ItemGroup>

    <!-- Global Usings -->
    <ItemGroup>
        <Using Include="System.Collections"/>
        <Using Include="System.ComponentModel"/>
        <Using Include="System.Diagnostics"/>
        <Using Include="System.Diagnostics.CodeAnalysis"/>
        <Using Include="System.Numerics"/>
        <Using Include="System.Runtime.CompilerServices"/>
        <Using Include="System.Runtime.InteropServices"/>

        <Using Include="JetBrains.Annotations"/>

        <!-- Recommendations for downstream -->
        <Using Include="ScrubJay.Prelude" Static="true"/>

        <Using Include="ScrubJay.Building"/>
        <Using Include="ScrubJay.Collections"/>
        <Using Include="ScrubJay.Collections.Pooling"/>
        <Using Include="ScrubJay.Comparison"/>
        <Using Include="ScrubJay.Enums"/>
        <Using Include="ScrubJay.Extensions"/>
        <Using Include="ScrubJay.Functional"/>
        <Using Include="ScrubJay.Memory"/>
        <Using Include="ScrubJay.Text"/>
        <Using Include="ScrubJay.Utilities"/>
        <Using Include="ScrubJay.Validation"/>
    </ItemGroup>

    <!-- NuGet Packages -->
    <ItemGroup>
        <PackageReference Include="Fody" Version="6.9.2">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="InlineIL.Fody" Version="1.10.0">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="JetBrains.Annotations" Version="2024.3.0">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Polyfill" Version="8.7.0">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
    </ItemGroup>

    <!-- .NetStandard and .NetFramework require extra packages -->
    <ItemGroup Condition=" '$(TargetFramework)' == 'net481' Or '$(TargetFramework)' == 'netstandard2.0' Or '$(TargetFramework)' == 'netstandard2.1'">
        <PackageReference Include="System.Memory" Version="4.6.3"/>
        <PackageReference Include="System.Runtime.CompilerServices.Unsafe" Version="6.1.2">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
    </ItemGroup>

</Project>
