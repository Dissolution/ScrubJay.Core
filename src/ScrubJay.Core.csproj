<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <RootNamespace>ScrubJay</RootNamespace>
        <AssemblyName>ScrubJay.Core</AssemblyName>
        
        <TargetFrameworks>
            <!-- Only supported version of .Net Framework -->
            <!-- https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-framework -->
            net481;
            <!-- Support for both .Net Standard versions -->
            <!-- .Net Standard 2.0 so we can be consumed by Source Generators, which are currently limited to that version -->
            netstandard2.0;netstandard2.1;
            <!-- All supported .Net Core versions -->
            <!-- https://dotnet.microsoft.com/en-us/platform/support/policy/dotnet-core -->
            net6.0;net7.0;net8.0;            
        </TargetFrameworks>
        
        <!-- Always use the latest features -->
        <LangVersion>latest</LangVersion>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>

        <!-- Static Code Analysis -->
        <AnalysisLevel>latest</AnalysisLevel>
        <AnalysisMode>All</AnalysisMode>
        <EnforceCodeStyleInBuild>true</EnforceCodeStyleInBuild>

        <!-- Ensure that all Polyfilled types are public -->
        <PolyPublic>true</PolyPublic>

        <!-- Quiet Warnings -->
        <NoWarn>
            $(NoWarn);
            
            CS1591; RCS1138;    <!-- Missing XML Comments -->
            
            CA1000;     <!-- Do not declare static members on generic types -->
            CA1051;     <!-- Do not declare visible instance fields -->
            CA1062;     <!-- External nullability -->
            CA1305;     <!-- Localization -->
            CA1716;     <!-- Identifiers should not match keywords -->
            CA1725; S927;   <!-- Rename parameters to match interface/root -->
            CA2225;     <!-- Operator overloads have named alternates -->
            CA2237;     <!-- Add [Serializable] to X as this type implements ISerializable -->
            
            S1168;      <!-- Return an empty collection instead of 'null' -->
            S1939;      <!-- implemented interface can be removed from inheritance list -->
            S3963; CA1810;  <!-- Inialize static fields inline -->
            S3267;      <!-- Loops should be simplified with 'Where' -->
            
            MA0016;         <!-- Prefer using collection abstractions instead of implementation -->
            MA0051;         <!-- Method Complexity -->
            MA0061; S1006;  <!-- Method overrides should not change default values -->
        </NoWarn>
        
        <!-- Setup NuGet -->
        <IsPackable>true</IsPackable>
        <EnablePackageValidation>false</EnablePackageValidation>
        
        <!-- NuGet Package Information -->
        <Title>ScrubJay Core Libraries</Title>
        <Authors>Timothy Jay</Authors>
        <Description>
            The core shared library for all ScrubJay namespaces.
        </Description>
        <RepositoryUrl>https://github.com/Dissolution/ScrubJay.Core</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageLicenseExpression>MIT</PackageLicenseExpression>
        <PackageIcon>jay.png</PackageIcon>
        <PackageOutputPath>..\packages\</PackageOutputPath>
        <PackageVersion>0.3.0-alpha</PackageVersion>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <GenerateDocumentationFile>false</GenerateDocumentationFile>
    </PropertyGroup>
    
    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <!-- Create NuGet Package -->
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <!-- Generate XML documentation -->
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
    </PropertyGroup>
    
    <!-- NuGet -->
    <ItemGroup Condition=" '$(Configuration)' == 'Release' ">
        <None Include="..\README.md" Pack="true" PackagePath="\"/>
        <None Include="..\LICENSE.txt" Pack="true" PackagePath="\"/>
        <None Include="..\jay.png" Pack="true" PackagePath="\"/>
    </ItemGroup>

    <!-- Global Usings -->
    <ItemGroup>
        <Using Include="System.Collections"/>
        <Using Include="System.ComponentModel"/>
        <Using Include="System.Diagnostics"/>
        <Using Include="System.Diagnostics.CodeAnalysis"/>
        <Using Include="System.Numerics"/>
        <Using Include="System.Runtime.CompilerServices"/>
        <Using Include="System.Runtime.InteropServices"/>
        
        <!-- import ourself -->
        <Using Include="ScrubJay.GlobalHelper" Static="true"/>
        <Using Include="ScrubJay.Buffers"/>
        <Using Include="ScrubJay.Extensions"/>
        <Using Include="ScrubJay.Utilities"/>
        <Using Include="ScrubJay.Validation"/>

        <Using Include="JetBrains.Annotations"/>
    </ItemGroup>

    <!-- Need System.Memory for older frameworks -->
    <ItemGroup Condition=" '$(TargetFramework)' == 'net481' Or '$(TargetFramework)' == 'netstandard2.0' Or '$(TargetFramework)' == 'netstandard2.1'">
        <PackageReference Include="System.Memory" Version="4.5.5">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Fody" Version="6.8.2">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="InlineIL.Fody" Version="1.9.0">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="JetBrains.Annotations" Version="2024.2.0">
            <PrivateAssets>all</PrivateAssets>
        </PackageReference>
        <PackageReference Include="Polyfill" Version="6.11.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

    <!-- Static Code Analyzers -->
    <ItemGroup>
        <PackageReference Include="Meziantou.Analyzer" Version="2.0.168">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="SonarAnalyzer.CSharp" Version="9.32.0.97167">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Roslynator.Analyzers" Version="4.12.6">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>
    
    <!-- Expose our internals to our tests and other trusted ScrubJay libraries -->
    <ItemGroup>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
            <_Parameter1>ScrubJay.Core.Tests</_Parameter1>
        </AssemblyAttribute>
        <AssemblyAttribute Include="System.Runtime.CompilerServices.InternalsVisibleTo">
            <_Parameter1>ScrubJay.Text</_Parameter1>
        </AssemblyAttribute>
    </ItemGroup>
</Project>
